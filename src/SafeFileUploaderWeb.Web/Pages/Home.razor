@page "/"
@inject ISnackbar Snackbar
@inject IFileUploaderHandler FileUploader
@using SafeFileUploaderWeb.Core
@using SafeFileUploaderWeb.Core.Abstractions
@using SafeFileUploaderWeb.Core.Requests

<PageTitle>Home</PageTitle>

<MudGrid>

</MudGrid>

@code {
    private class LocalFileItem
    {
        public string Name { get; set; } = string.Empty;
        public long Size { get; set; }

        private string Extension { get; }

        public LocalFileItem(string name, long size)
        {
            Name = name;
            Size = size;
            Extension = Path.GetExtension(name);
        }

        public UploadFileItem ToUploadFile()
           => new UploadFileItem(Name, Size);
    }

    private readonly List<IBrowserFile> LoadedFiles = new();

    private async Task LoadFiles(IReadOnlyList<IBrowserFile> files)
    {
        foreach (var file in files)
        {
            if (file.Size > Constants.MaxFileSizeBytes)
            {
                Snackbar.Add($"The selected file cannot be bigger than {Constants.MaxFileSizeMb} MB", Severity.Warning);
                return;
            }
        }
    }
}
